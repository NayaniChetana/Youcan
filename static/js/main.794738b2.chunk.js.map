{"version":3,"sources":["components/Form.js","components/Todo.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","List","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.794738b2.chunk.js","sourcesContent":["import React from 'react'; \r\n\r\nfunction Form({inputText,setInputText,todos,setTodos,setStatus})\r\n{\r\n  const inputTextHandler = (e)=> {\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n  }\r\n  const submitTodoHandler = (e) =>{\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,{text: inputText, completed: false, id :Math.random()*1230 }\r\n    ])\r\n    setInputText(\"\");\r\n  }\r\n  const statusHandler = (e) =>{\r\n    setStatus(e.target.value);\r\n  }\r\n      return(\r\n        <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n\r\n    );\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React from 'react';\r\n\r\nfunction Todo({ text,todo,setTodos,todos })\r\n{\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    }\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map((item)=>{\r\n            if(item.id===todo.id)\r\n            return{\r\n                ...item, completed : !item.completed\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return(\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed ? \"completed\":'' }`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i  className='fas fa-check'></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className='fas fa-minus-square'></i></button>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nfunction List({todos,setTodos,filteredTodos})\r\n{\r\n    return(\r\n        <div className=\"to-do-container\">\r\n            <ul className=\"to-do-list\">\r\n            {filteredTodos.map((todo)=>(\r\n                <Todo  todos={todos} setTodos={setTodos} text={todo.text} todo={todo}/>\r\n            ))}\r\n            </ul>\r\n        \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport List from './components/List';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos,setTodos] = useState([]);\n  const [status,setStatus] = useState('all');\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n  useEffect(()=>{\n    getLocalTodos();\n\n  },[]);\n\n  useEffect(()=>{\n    filterHandler();\n    saveLocalTodos();\n  },[todos,status]);\n \n\n  const filterHandler =() =>\n  {\n    switch(status)\n    {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo)=>todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter((todo)=>todo.completed === false))\n        break;\n      default :\n        setFilteredTodos(todos)\n        break;\n\n    }\n\n  }\n\n  //saving data\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\",JSON.stringify(todos));\n  }\n  const getLocalTodos = () =>{\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>You Can</h1>\n      </header>\n      <h2>Do It!</h2>\n      <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus}/>\n      <List todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}